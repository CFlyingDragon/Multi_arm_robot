// Generated by gencpp from file armc_visual/VisualVar.msg
// DO NOT EDIT!


#ifndef ARMC_VISUAL_MESSAGE_VISUALVAR_H
#define ARMC_VISUAL_MESSAGE_VISUALVAR_H

#include <ros/service_traits.h>


#include <armc_visual/VisualVarRequest.h>
#include <armc_visual/VisualVarResponse.h>


namespace armc_visual
{

struct VisualVar
{

typedef VisualVarRequest Request;
typedef VisualVarResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct VisualVar
} // namespace armc_visual


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::armc_visual::VisualVar > {
  static const char* value()
  {
    return "2cb2062d40f8dd0481d223e6c7570480";
  }

  static const char* value(const ::armc_visual::VisualVar&) { return value(); }
};

template<>
struct DataType< ::armc_visual::VisualVar > {
  static const char* value()
  {
    return "armc_visual/VisualVar";
  }

  static const char* value(const ::armc_visual::VisualVar&) { return value(); }
};


// service_traits::MD5Sum< ::armc_visual::VisualVarRequest> should match 
// service_traits::MD5Sum< ::armc_visual::VisualVar > 
template<>
struct MD5Sum< ::armc_visual::VisualVarRequest>
{
  static const char* value()
  {
    return MD5Sum< ::armc_visual::VisualVar >::value();
  }
  static const char* value(const ::armc_visual::VisualVarRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::armc_visual::VisualVarRequest> should match 
// service_traits::DataType< ::armc_visual::VisualVar > 
template<>
struct DataType< ::armc_visual::VisualVarRequest>
{
  static const char* value()
  {
    return DataType< ::armc_visual::VisualVar >::value();
  }
  static const char* value(const ::armc_visual::VisualVarRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::armc_visual::VisualVarResponse> should match 
// service_traits::MD5Sum< ::armc_visual::VisualVar > 
template<>
struct MD5Sum< ::armc_visual::VisualVarResponse>
{
  static const char* value()
  {
    return MD5Sum< ::armc_visual::VisualVar >::value();
  }
  static const char* value(const ::armc_visual::VisualVarResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::armc_visual::VisualVarResponse> should match 
// service_traits::DataType< ::armc_visual::VisualVar > 
template<>
struct DataType< ::armc_visual::VisualVarResponse>
{
  static const char* value()
  {
    return DataType< ::armc_visual::VisualVar >::value();
  }
  static const char* value(const ::armc_visual::VisualVarResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARMC_VISUAL_MESSAGE_VISUALVAR_H
